(()=>{"use strict";var e,t,r,n,i,o,a,s={994:(e,t,r)=>{function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function o(e,t){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.add(e)}function a(e,t,r){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return r}var s=new WeakSet,c=function(){function e(t,r){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"eng";n(this,e),o(this,s),this.keys=t,this.lang=i,this.container=r,this.shift=!1,this.keyBoard=null,this.pressKeys=[],this.caps=!1,a(this,s,u).call(this)}var t,r;return t=e,r=[{key:"getKey",value:function(e){if("Tab"===e)return"\t";if("Enter"===e)return"\n";var t=this.keys[e],r=this.shift?t.shift[this.lang]:t.name[this.lang];return this.caps&&"letter"===t.type?r=r.toUpperCase():!this.caps&&this.shift&&(r=r.toLowerCase()),r}},{key:"pressKey",value:function(e){var t=this;return Object.keys(this.keys).includes(e.code)&&e.preventDefault(),"CapsLock"!==e.code||(this.caps=!this.caps,a(this,s,u).call(this),this.caps)?("ShiftLeft"!==e.code&&"ShiftRight"!==e.code||(this.shift=!0,this.caps=!this.caps,a(this,s,u).call(this)),this.pressKeys.push(e.code),this.pressKeys.forEach((function(e){var r;null===(r=t.container.querySelector(".".concat(e)))||void 0===r||r.classList.add("active")})),"AltLeft"===e.code&&e.ctrlKey&&(this.lang="eng"===this.lang?"ru":"eng",localStorage.setItem("lang",this.lang),a(this,s,u).call(this)),this.getKey(e.code)):(this.upKey(e),a(this,s,u).call(this),this.getKey(e.code))}},{key:"upKey",value:function(e){var t;this.pressKeys=this.pressKeys.filter((function(t){return t!==e.code})),null===(t=this.container.querySelector(".".concat(e.code)))||void 0===t||t.classList.remove("active"),this.pressKeys.includes("ShiftLeft")||this.pressKeys.includes("ShiftRight")||!this.shift||(this.shift=!1,this.caps=!this.caps,a(this,s,u).call(this))}},{key:"createKeyboard",value:function(){var e=this,t=document.createElement("div");t.classList.add("keyboard");for(var r=function(r){var n=document.createElement("div");n.classList.add("row"),Object.entries(e.keys).filter((function(e){return e[1].row===r})).forEach((function(t){var r=document.createElement("button"),i=e.shift?t[1].shift[e.lang]:t[1].name[e.lang];r.classList.add("btn"),r.classList.add(t[0]),r.dataset.keyCode=t[0],"letter"===t[1].type&&e.caps&&(i=i.toUpperCase()),!e.caps&&e.shift&&"letter"===t[1].type&&(i=i.toLowerCase()),r.innerHTML=i,t[1].width&&(r.style.width="".concat(t[1].width,"px")),n.append(r)})),t.append(n)},n=0;n<5;n+=1)r(n);return t}}],r&&i(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function u(){var e=this;this.keyBoard=this.createKeyboard(),this.container.innerHTML="",this.container.append(this.keyBoard),this.pressKeys.forEach((function(t){var r;null===(r=e.container.querySelector(".".concat(t)))||void 0===r||r.classList.add("active")}))}const l=c,d={Backquote:{name:{eng:"`",ru:"ё"},shift:{eng:"~",ru:"Ё"},row:0},Digit1:{name:{eng:"1",ru:"1"},shift:{eng:"!",ru:"!"},row:0},Digit2:{name:{eng:"2",ru:"2"},shift:{eng:"@",ru:'"'},row:0},Digit3:{name:{eng:"3",ru:"3"},shift:{eng:"#",ru:"№"},row:0},Digit4:{name:{eng:"4",ru:"4"},shift:{eng:"$",ru:";"},row:0},Digit5:{name:{eng:"5",ru:"5"},shift:{eng:"~",ru:"%"},row:0},Digit6:{name:{eng:"6",ru:"6"},shift:{eng:"^",ru:":"},row:0},Digit7:{name:{eng:"7",ru:"7"},shift:{eng:"&",ru:"?"},row:0},Digit8:{name:{eng:"8",ru:"8"},shift:{eng:"*",ru:"*"},row:0},Digit9:{name:{eng:"9",ru:"9"},shift:{eng:"(",ru:"("},row:0},Digit0:{name:{eng:"0",ru:"0"},shift:{eng:")",ru:")"},row:0},Minus:{name:{eng:"-",ru:"-"},shift:{eng:"_",ru:"_"},row:0},Equal:{name:{eng:"=",ru:"="},shift:{eng:"+",ru:"+"},row:0},Backslash:{name:{eng:"\\",ru:"\\"},shift:{eng:"|",ru:"/"},row:0},Backspace:{name:{eng:"Backspace",ru:"Backspace"},shift:{eng:"Backspace",ru:"Backspace"},row:0,width:90},Tab:{name:{eng:"Tab",ru:"Tab"},shift:{eng:"Tab",ru:"Tab"},row:1,width:100},KeyQ:{name:{eng:"q",ru:"й"},shift:{eng:"Q",ru:"Й"},row:1,type:"letter"},KeyW:{name:{eng:"w",ru:"ц"},shift:{eng:"W",ru:"Ц"},row:1,type:"letter"},KeyE:{name:{eng:"e",ru:"у"},shift:{eng:"E",ru:"У"},row:1,type:"letter"},KeyR:{name:{eng:"r",ru:"к"},shift:{eng:"R",ru:"К"},row:1,type:"letter"},KeyT:{name:{eng:"t",ru:"е"},shift:{eng:"T",ru:"Е"},row:1,type:"letter"},KeyY:{name:{eng:"y",ru:"н"},shift:{eng:"Y",ru:"Н"},row:1,type:"letter"},KeyU:{name:{eng:"u",ru:"г"},shift:{eng:"U",ru:"Г"},row:1,type:"letter"},KeyI:{name:{eng:"i",ru:"ш"},shift:{eng:"I",ru:"Ш"},row:1,type:"letter"},KeyO:{name:{eng:"o",ru:"щ"},shift:{eng:"O",ru:"Щ"},row:1,type:"letter"},KeyP:{name:{eng:"p",ru:"з"},shift:{eng:"P",ru:"З"},row:1,type:"letter"},BracketLeft:{name:{eng:"[",ru:"х"},shift:{eng:"{",ru:"Х"},row:1,type:"letter"},BracketRight:{name:{eng:"]",ru:"ъ"},shift:{eng:"}",ru:"Ъ"},row:1,type:"letter"},Delete:{name:{eng:"Delete",ru:"Delete"},shift:{eng:"Delete",ru:"Delete"},row:1,width:95},CapsLock:{name:{eng:"CapsLock",ru:"CapsLock"},shift:{eng:"CapsLock",ru:"CapsLock"},row:2,width:130},KeyA:{name:{eng:"a",ru:"ф"},shift:{eng:"A",ru:"Ф"},row:2,type:"letter"},KeyS:{name:{eng:"s",ru:"ы"},shift:{eng:"S",ru:"Ы"},row:2,type:"letter"},KeyD:{name:{eng:"d",ru:"в"},shift:{eng:"D",ru:"В"},row:2,type:"letter"},KeyF:{name:{eng:"f",ru:"а"},shift:{eng:"F",ru:"А"},row:2,type:"letter"},KeyG:{name:{eng:"g",ru:"п"},shift:{eng:"G",ru:"П"},row:2,type:"letter"},KeyH:{name:{eng:"h",ru:"р"},shift:{eng:"H",ru:"Р"},row:2,type:"letter"},KeyJ:{name:{eng:"j",ru:"о"},shift:{eng:"J",ru:"О"},row:2,type:"letter"},KeyK:{name:{eng:"k",ru:"л"},shift:{eng:"K",ru:"Л"},row:2,type:"letter"},KeyL:{name:{eng:"l",ru:"д"},shift:{eng:"L",ru:"Д"},row:2,type:"letter"},Semicolon:{name:{eng:";",ru:"ж"},shift:{eng:":",ru:"Ж"},row:2,type:"letter"},Quote:{name:{eng:"'",ru:"э"},shift:{eng:'"',ru:"Э"},row:2,type:"letter"},Enter:{name:{eng:"Enter",ru:"Enter"},shift:{eng:"Enter",ru:"Enter"},row:2,width:120},ShiftLeft:{name:{eng:"Shift",ru:"Shift"},shift:{eng:"Shift",ru:"Shift"},row:3,width:130},KeyZ:{name:{eng:"z",ru:"я"},shift:{eng:"Z",ru:"Я"},row:3,type:"letter"},KeyX:{name:{eng:"x",ru:"ч"},shift:{eng:"X",ru:"Ч"},row:3,type:"letter"},KeyC:{name:{eng:"c",ru:"с"},shift:{eng:"C",ru:"С"},row:3,type:"letter"},KeyV:{name:{eng:"v",ru:"м"},shift:{eng:"V",ru:"М"},row:3,type:"letter"},KeyB:{name:{eng:"b",ru:"и"},shift:{eng:"B",ru:"И"},row:3,type:"letter"},KeyN:{name:{eng:"n",ru:"т"},shift:{eng:"N",ru:"Т"},row:3,type:"letter"},KeyM:{name:{eng:"m",ru:"ь"},shift:{eng:"M",ru:"Ь"},row:3,type:"letter"},Comma:{name:{eng:",",ru:"б"},shift:{eng:"<",ru:"Б"},row:3,type:"letter"},Period:{name:{eng:".",ru:"ю"},shift:{eng:">",ru:"Ю"},row:3,type:"letter"},Slash:{name:{eng:"/",ru:"."},shift:{eng:"?",ru:","},row:3},ArrowUp:{name:{eng:"▲",ru:"▲"},shift:{eng:"▲",ru:"▲"},row:3},ShiftRight:{name:{eng:"Shift",ru:"Shift"},shift:{eng:"Shift",ru:"Shift"},row:3,width:120},ControlLeft:{name:{eng:"Ctrl",ru:"Ctrl"},shift:{eng:"Ctrl",ru:"Ctrl"},row:4},Win:{name:{eng:"Win",ru:"Win"},shift:{eng:"Win",ru:"Win"},row:4},AltLeft:{name:{eng:"Alt",ru:"Alt"},shift:{eng:"Alt",ru:"Alt"},row:4},Space:{name:{eng:" ",ru:" "},shift:{eng:" ",ru:" "},row:4,width:405},AltRight:{name:{eng:"Alt",ru:"Alt"},shift:{eng:"Alt",ru:"Alt"},row:4},ArrowLeft:{name:{eng:"◄",ru:"◄"},shift:{eng:"◄",ru:"◄"},row:4},ArrowDown:{name:{eng:"▼",ru:"▼"},shift:{eng:"▼",ru:"▼"},row:4},ArrowRight:{name:{eng:"►",ru:"►"},shift:{eng:"►",ru:"►"},row:4},ControlRight:{name:{eng:"Ctrl",ru:"Ctrl"},shift:{eng:"Ctrl",ru:"Ctrl"},row:4,width:65}};function f(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}const h=function(){function e(t){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.value="",this.area=t,this.area.focus(),this.position=this.area.selectionStart,this.area.addEventListener("click",(function(){r.position=r.area.selectionStart}))}var t,r;return t=e,(r=[{key:"setValue",value:function(e){"Backspace"===e||"Delete"===e?this.deleteLetter(e):e.length<=1&&(this.position+=1,this.value=this.value.slice(0,this.position-1)+e+this.value.slice(this.position-1)),this.area.value=this.value,-1===this.position&&(this.position=0),this.area.selectionStart=this.position,this.area.selectionEnd=this.position}},{key:"deleteLetter",value:function(e){var t=this;"Backspace"===e?(this.position-=1,this.value=this.value.split("").filter((function(e,r){return r!==t.position})).join("")):"Delete"===e&&(this.value=this.value.split("").filter((function(e,r){return r!==t.position})).join(""))}}])&&f(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();r(100);var p=document.body,g=document.createElement("h1");g.innerHTML="Виртуальная клавиатура";var m=document.createElement("textarea"),y=document.createElement("div");y.classList.add("container");var v=document.createElement("div");v.classList.add("keyboard-container");var w=document.createElement("p");w.classList.add("info"),w.innerHTML="Клавиатура создана в операционной системе Ubunty. Для переключения языка комбинация: левыe ctrl + alt",y.append(g,m,v,w),p.append(y);var b=localStorage.getItem("lang")||"eng",E=new l(d,v,b),k=new h(m);document.body.addEventListener("keydown",(function(e){d[e.code]&&k.setValue(E.pressKey(e))})),document.body.addEventListener("Click",(function(e){k.setValue(E.pressKey(e))})),document.body.addEventListener("keyup",(function(e){"CapsLock"!==e.code&&E.upKey(e)})),document.body.addEventListener("ClickUp",(function(e){"CapsLock"!==e.code&&E.upKey(e)}));var C=!1,L=null;v.addEventListener("mousedown",(function(e){if(!C){if("BUTTON"===e.target.tagName){var t=new KeyboardEvent("Click",{code:e.target.dataset.keyCode,bubbles:!0,cancelable:!0});document.body.dispatchEvent(t),L=e.target.dataset.keyCode}C=!0}})),v.addEventListener("mouseup",(function(){C=!1;var e=new KeyboardEvent("ClickUp",{code:L,bubbles:!0,cancelable:!0});document.body.dispatchEvent(e)}))},783:(e,t,r)=>{var n=r(618),i=Object.create(null),o="undefined"==typeof document,a=Array.prototype.forEach;function s(){}function c(e,t){if(!t){if(!e.href)return;t=e.href.split("?")[0]}if(l(t)&&!1!==e.isLoaded&&t&&t.indexOf(".css")>-1){e.visited=!0;var r=e.cloneNode();r.isLoaded=!1,r.addEventListener("load",(function(){r.isLoaded||(r.isLoaded=!0,e.parentNode.removeChild(e))})),r.addEventListener("error",(function(){r.isLoaded||(r.isLoaded=!0,e.parentNode.removeChild(e))})),r.href="".concat(t,"?").concat(Date.now()),e.nextSibling?e.parentNode.insertBefore(r,e.nextSibling):e.parentNode.appendChild(r)}}function u(){var e=document.querySelectorAll("link");a.call(e,(function(e){!0!==e.visited&&c(e)}))}function l(e){return!!/^[a-zA-Z][a-zA-Z\d+\-.]*:/.test(e)}e.exports=function(e,t){if(o)return console.log("no window.document found, will not HMR CSS"),s;var r,d,f=function(e){var t=i[e];if(!t){if(document.currentScript)t=document.currentScript.src;else{var r=document.getElementsByTagName("script"),o=r[r.length-1];o&&(t=o.src)}i[e]=t}return function(e){if(!t)return null;var r=t.split(/([^\\/]+)\.js$/),i=r&&r[1];return i&&e?e.split(",").map((function(e){var r=new RegExp("".concat(i,"\\.js$"),"g");return n(t.replace(r,"".concat(e.replace(/{fileName}/g,i),".css")))})):[t.replace(".js",".css")]}}(e);return r=function(){var e=f(t.filename),r=function(e){if(!e)return!1;var t=document.querySelectorAll("link"),r=!1;return a.call(t,(function(t){if(t.href){var i=function(e,t){var r;return e=n(e),t.some((function(n){e.indexOf(t)>-1&&(r=n)})),r}(t.href,e);l(i)&&!0!==t.visited&&i&&(c(t,i),r=!0)}})),r}(e);if(t.locals)return console.log("[HMR] Detected local css modules. Reload all css"),void u();r?console.log("[HMR] css reload %s",e.join(" ")):(console.log("[HMR] Reload all css"),u())},50,d=0,function(){var e=this,t=arguments,n=function(){return r.apply(e,t)};clearTimeout(d),d=setTimeout(n,50)}}},618:e=>{e.exports=function(e){if(e=e.trim(),/^data:/i.test(e))return e;var t=-1!==e.indexOf("//")?e.split("//")[0]+"//":"",r=e.replace(new RegExp(t,"i"),"").split("/"),n=r[0].toLowerCase().replace(/\.$/,"");return r[0]="",t+n+r.reduce((function(e,t){switch(t){case"..":e.pop();break;case".":break;default:e.push(t)}return e}),[]).join("/")}},100:(e,t,r)=>{var n=r(783)(e.id,{locals:!1});e.hot.dispose(n),e.hot.accept(void 0,n)}},c={};function u(e){var t=c[e];if(void 0!==t){if(void 0!==t.error)throw t.error;return t.exports}var r=c[e]={id:e,exports:{}};try{var n={id:e,module:r,factory:s[e],require:u};u.i.forEach((function(e){e(n)})),r=n.module,n.factory.call(r.exports,r,r.exports,n.require)}catch(e){throw r.error=e,e}return r.exports}u.m=s,u.c=c,u.i=[],u.hu=e=>e+"."+u.h()+".hot-update.js",u.miniCssF=e=>{},u.hmrF=()=>"main."+u.h()+".hot-update.json",u.h=()=>"c545216c1072648011e9",u.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),u.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),e={},t="virtual-keyboard:",u.l=(r,n,i,o)=>{if(e[r])e[r].push(n);else{var a,s;if(void 0!==i)for(var c=document.getElementsByTagName("script"),l=0;l<c.length;l++){var d=c[l];if(d.getAttribute("src")==r||d.getAttribute("data-webpack")==t+i){a=d;break}}a||(s=!0,(a=document.createElement("script")).charset="utf-8",a.timeout=120,u.nc&&a.setAttribute("nonce",u.nc),a.setAttribute("data-webpack",t+i),a.src=r),e[r]=[n];var f=(t,n)=>{a.onerror=a.onload=null,clearTimeout(h);var i=e[r];if(delete e[r],a.parentNode&&a.parentNode.removeChild(a),i&&i.forEach((e=>e(n))),t)return t(n)},h=setTimeout(f.bind(null,void 0,{type:"timeout",target:a}),12e4);a.onerror=f.bind(null,a.onerror),a.onload=f.bind(null,a.onload),s&&document.head.appendChild(a)}},(()=>{var e,t,r,n={},i=u.c,o=[],a=[],s="idle",c=0,l=[];function d(e){s=e;for(var t=[],r=0;r<a.length;r++)t[r]=a[r].call(null,e);return Promise.all(t)}function f(){0==--c&&d("ready").then((function(){if(0===c){var e=l;l=[];for(var t=0;t<e.length;t++)e[t]()}}))}function h(e){if("idle"!==s)throw new Error("check() is only allowed in idle status");return d("check").then(u.hmrM).then((function(r){return r?d("prepare").then((function(){var n=[];return t=[],Promise.all(Object.keys(u.hmrC).reduce((function(e,i){return u.hmrC[i](r.c,r.r,r.m,e,t,n),e}),[])).then((function(){return t=function(){return e?g(e):d("ready").then((function(){return n}))},0===c?t():new Promise((function(e){l.push((function(){e(t())}))}));var t}))})):d(m()?"ready":"idle").then((function(){return null}))}))}function p(e){return"ready"!==s?Promise.resolve().then((function(){throw new Error("apply() is only allowed in ready status (state: "+s+")")})):g(e)}function g(e){e=e||{},m();var n=t.map((function(t){return t(e)}));t=void 0;var i=n.map((function(e){return e.error})).filter(Boolean);if(i.length>0)return d("abort").then((function(){throw i[0]}));var o=d("dispose");n.forEach((function(e){e.dispose&&e.dispose()}));var a,s=d("apply"),c=function(e){a||(a=e)},u=[];return n.forEach((function(e){if(e.apply){var t=e.apply(c);if(t)for(var r=0;r<t.length;r++)u.push(t[r])}})),Promise.all([o,s]).then((function(){return a?d("fail").then((function(){throw a})):r?g(e).then((function(e){return u.forEach((function(t){e.indexOf(t)<0&&e.push(t)})),e})):d("idle").then((function(){return u}))}))}function m(){if(r)return t||(t=[]),Object.keys(u.hmrI).forEach((function(e){r.forEach((function(r){u.hmrI[e](r,t)}))})),r=void 0,!0}u.hmrD=n,u.i.push((function(l){var g,m,y,v,w=l.module,b=function(t,r){var n=i[r];if(!n)return t;var a=function(a){if(n.hot.active){if(i[a]){var s=i[a].parents;-1===s.indexOf(r)&&s.push(r)}else o=[r],e=a;-1===n.children.indexOf(a)&&n.children.push(a)}else console.warn("[HMR] unexpected require("+a+") from disposed module "+r),o=[];return t(a)},u=function(e){return{configurable:!0,enumerable:!0,get:function(){return t[e]},set:function(r){t[e]=r}}};for(var l in t)Object.prototype.hasOwnProperty.call(t,l)&&"e"!==l&&Object.defineProperty(a,l,u(l));return a.e=function(e){return function(e){switch(s){case"ready":d("prepare");case"prepare":return c++,e.then(f,f),e;default:return e}}(t.e(e))},a}(l.require,l.id);w.hot=(g=l.id,m=w,v={_acceptedDependencies:{},_acceptedErrorHandlers:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_selfInvalidated:!1,_disposeHandlers:[],_main:y=e!==g,_requireSelf:function(){o=m.parents.slice(),e=y?void 0:g,u(g)},active:!0,accept:function(e,t,r){if(void 0===e)v._selfAccepted=!0;else if("function"==typeof e)v._selfAccepted=e;else if("object"==typeof e&&null!==e)for(var n=0;n<e.length;n++)v._acceptedDependencies[e[n]]=t||function(){},v._acceptedErrorHandlers[e[n]]=r;else v._acceptedDependencies[e]=t||function(){},v._acceptedErrorHandlers[e]=r},decline:function(e){if(void 0===e)v._selfDeclined=!0;else if("object"==typeof e&&null!==e)for(var t=0;t<e.length;t++)v._declinedDependencies[e[t]]=!0;else v._declinedDependencies[e]=!0},dispose:function(e){v._disposeHandlers.push(e)},addDisposeHandler:function(e){v._disposeHandlers.push(e)},removeDisposeHandler:function(e){var t=v._disposeHandlers.indexOf(e);t>=0&&v._disposeHandlers.splice(t,1)},invalidate:function(){switch(this._selfInvalidated=!0,s){case"idle":t=[],Object.keys(u.hmrI).forEach((function(e){u.hmrI[e](g,t)})),d("ready");break;case"ready":Object.keys(u.hmrI).forEach((function(e){u.hmrI[e](g,t)}));break;case"prepare":case"check":case"dispose":case"apply":(r=r||[]).push(g)}},check:h,apply:p,status:function(e){if(!e)return s;a.push(e)},addStatusHandler:function(e){a.push(e)},removeStatusHandler:function(e){var t=a.indexOf(e);t>=0&&a.splice(t,1)},data:n[g]},e=void 0,v),w.parents=o,w.children=[],o=[],l.require=b})),u.hmrC={},u.hmrI={}})(),(()=>{var e;u.g.importScripts&&(e=u.g.location+"");var t=u.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),u.p=e})(),r=(e,t,r,n)=>{var i=document.createElement("link");return i.rel="stylesheet",i.type="text/css",i.onerror=i.onload=o=>{if(i.onerror=i.onload=null,"load"===o.type)r();else{var a=o&&("load"===o.type?"missing":o.type),s=o&&o.target&&o.target.href||t,c=new Error("Loading CSS chunk "+e+" failed.\n("+s+")");c.code="CSS_CHUNK_LOAD_FAILED",c.type=a,c.request=s,i.parentNode.removeChild(i),n(c)}},i.href=t,document.head.appendChild(i),i},n=(e,t)=>{for(var r=document.getElementsByTagName("link"),n=0;n<r.length;n++){var i=(a=r[n]).getAttribute("data-href")||a.getAttribute("href");if("stylesheet"===a.rel&&(i===e||i===t))return a}var o=document.getElementsByTagName("style");for(n=0;n<o.length;n++){var a;if((i=(a=o[n]).getAttribute("data-href"))===e||i===t)return a}},i=[],o=[],a=e=>({dispose:()=>{for(var e=0;e<i.length;e++){var t=i[e];t.parentNode&&t.parentNode.removeChild(t)}i.length=0},apply:()=>{for(var e=0;e<o.length;e++)o[e].rel="stylesheet";o.length=0}}),u.hmrC.miniCss=(e,t,s,c,l,d)=>{l.push(a),e.forEach((e=>{var t=u.miniCssF(e),a=u.p+t,s=n(t,a);s&&c.push(new Promise(((t,n)=>{var c=r(e,a,(()=>{c.as="style",c.rel="preload",t()}),n);i.push(s),o.push(c)})))}))},(()=>{var e,t,r,n,i,o=u.hmrS_jsonp=u.hmrS_jsonp||{179:0},a={};function s(t,r){return e=r,new Promise(((e,r)=>{a[t]=e;var n=u.p+u.hu(t),i=new Error;u.l(n,(e=>{if(a[t]){a[t]=void 0;var n=e&&("load"===e.type?"missing":e.type),o=e&&e.target&&e.target.src;i.message="Loading hot update chunk "+t+" failed.\n("+n+": "+o+")",i.name="ChunkLoadError",i.type=n,i.request=o,r(i)}}))}))}function c(e){function a(e){for(var t=[e],r={},n=t.map((function(e){return{chain:[e],id:e}}));n.length>0;){var i=n.pop(),o=i.id,a=i.chain,c=u.c[o];if(c&&(!c.hot._selfAccepted||c.hot._selfInvalidated)){if(c.hot._selfDeclined)return{type:"self-declined",chain:a,moduleId:o};if(c.hot._main)return{type:"unaccepted",chain:a,moduleId:o};for(var l=0;l<c.parents.length;l++){var d=c.parents[l],f=u.c[d];if(f){if(f.hot._declinedDependencies[o])return{type:"declined",chain:a.concat([d]),moduleId:o,parentId:d};-1===t.indexOf(d)&&(f.hot._acceptedDependencies[o]?(r[d]||(r[d]=[]),s(r[d],[o])):(delete r[d],t.push(d),n.push({chain:a.concat([d]),id:d})))}}}}return{type:"accepted",moduleId:e,outdatedModules:t,outdatedDependencies:r}}function s(e,t){for(var r=0;r<t.length;r++){var n=t[r];-1===e.indexOf(n)&&e.push(n)}}u.f&&delete u.f.jsonpHmr,t=void 0;var c={},l=[],d={},f=function(e){console.warn("[HMR] unexpected require("+e.id+") to disposed module")};for(var h in r)if(u.o(r,h)){var p,g=r[h],m=!1,y=!1,v=!1,w="";switch((p=g?a(h):{type:"disposed",moduleId:h}).chain&&(w="\nUpdate propagation: "+p.chain.join(" -> ")),p.type){case"self-declined":e.onDeclined&&e.onDeclined(p),e.ignoreDeclined||(m=new Error("Aborted because of self decline: "+p.moduleId+w));break;case"declined":e.onDeclined&&e.onDeclined(p),e.ignoreDeclined||(m=new Error("Aborted because of declined dependency: "+p.moduleId+" in "+p.parentId+w));break;case"unaccepted":e.onUnaccepted&&e.onUnaccepted(p),e.ignoreUnaccepted||(m=new Error("Aborted because "+h+" is not accepted"+w));break;case"accepted":e.onAccepted&&e.onAccepted(p),y=!0;break;case"disposed":e.onDisposed&&e.onDisposed(p),v=!0;break;default:throw new Error("Unexception type "+p.type)}if(m)return{error:m};if(y)for(h in d[h]=g,s(l,p.outdatedModules),p.outdatedDependencies)u.o(p.outdatedDependencies,h)&&(c[h]||(c[h]=[]),s(c[h],p.outdatedDependencies[h]));v&&(s(l,[p.moduleId]),d[h]=f)}r=void 0;for(var b,E=[],k=0;k<l.length;k++){var C=l[k],L=u.c[C];L&&(L.hot._selfAccepted||L.hot._main)&&d[C]!==f&&!L.hot._selfInvalidated&&E.push({module:C,require:L.hot._requireSelf,errorHandler:L.hot._selfAccepted})}return{dispose:function(){var e;n.forEach((function(e){delete o[e]})),n=void 0;for(var t,r=l.slice();r.length>0;){var i=r.pop(),a=u.c[i];if(a){var s={},d=a.hot._disposeHandlers;for(k=0;k<d.length;k++)d[k].call(null,s);for(u.hmrD[i]=s,a.hot.active=!1,delete u.c[i],delete c[i],k=0;k<a.children.length;k++){var f=u.c[a.children[k]];f&&(e=f.parents.indexOf(i))>=0&&f.parents.splice(e,1)}}}for(var h in c)if(u.o(c,h)&&(a=u.c[h]))for(b=c[h],k=0;k<b.length;k++)t=b[k],(e=a.children.indexOf(t))>=0&&a.children.splice(e,1)},apply:function(t){for(var r in d)u.o(d,r)&&(u.m[r]=d[r]);for(var n=0;n<i.length;n++)i[n](u);for(var o in c)if(u.o(c,o)){var a=u.c[o];if(a){b=c[o];for(var s=[],f=[],h=[],p=0;p<b.length;p++){var g=b[p],m=a.hot._acceptedDependencies[g],y=a.hot._acceptedErrorHandlers[g];if(m){if(-1!==s.indexOf(m))continue;s.push(m),f.push(y),h.push(g)}}for(var v=0;v<s.length;v++)try{s[v].call(null,b)}catch(r){if("function"==typeof f[v])try{f[v](r,{moduleId:o,dependencyId:h[v]})}catch(n){e.onErrored&&e.onErrored({type:"accept-error-handler-errored",moduleId:o,dependencyId:h[v],error:n,originalError:r}),e.ignoreErrored||(t(n),t(r))}else e.onErrored&&e.onErrored({type:"accept-errored",moduleId:o,dependencyId:h[v],error:r}),e.ignoreErrored||t(r)}}}for(var w=0;w<E.length;w++){var k=E[w],C=k.module;try{k.require(C)}catch(r){if("function"==typeof k.errorHandler)try{k.errorHandler(r,{moduleId:C,module:u.c[C]})}catch(n){e.onErrored&&e.onErrored({type:"self-accept-error-handler-errored",moduleId:C,error:n,originalError:r}),e.ignoreErrored||(t(n),t(r))}else e.onErrored&&e.onErrored({type:"self-accept-errored",moduleId:C,error:r}),e.ignoreErrored||t(r)}}return l}}}self.webpackHotUpdatevirtual_keyboard=(t,n,o)=>{for(var s in n)u.o(n,s)&&(r[s]=n[s],e&&e.push(s));o&&i.push(o),a[t]&&(a[t](),a[t]=void 0)},u.hmrI.jsonp=function(e,t){r||(r={},i=[],n=[],t.push(c)),u.o(r,e)||(r[e]=u.m[e])},u.hmrC.jsonp=function(e,a,l,d,f,h){f.push(c),t={},n=a,r=l.reduce((function(e,t){return e[t]=!1,e}),{}),i=[],e.forEach((function(e){u.o(o,e)&&void 0!==o[e]?(d.push(s(e,h)),t[e]=!0):t[e]=!1})),u.f&&(u.f.jsonpHmr=function(e,r){t&&u.o(t,e)&&!t[e]&&(r.push(s(e)),t[e]=!0)})},u.hmrM=()=>{if("undefined"==typeof fetch)throw new Error("No browser support: need fetch API");return fetch(u.p+u.hmrF()).then((e=>{if(404!==e.status){if(!e.ok)throw new Error("Failed to fetch update manifest "+e.statusText);return e.json()}}))}})(),u(994)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,